set $mod Mod4
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

## Keybindings
bindsym XF86AudioRaiseVolume exec --no-startup-id pamixer --increase 10 && dunstify "`python /home/ainur/.scripts/volume_notification_bar.py`" -u LOW -r 1010
bindsym XF86AudioLowerVolume exec --no-startup-id pamixer --decrease 10 && dunstify "`python /home/ainur/.scripts/volume_notification_bar.py`" -u LOW -r 1010 

bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym XF86MonBrightnessUp exec --no-startup-id "xbacklight -inc 10 -steps 1 -time 0 ; dunstify \\"`python /home/ainur/.scripts/brightness_notification_bar.py`\\" -u LOW -r 1011"
bindsym XF86MonBrightnessDown exec --no-startup-id "xbacklight -dec 10 -steps 1 -time 0; dunstify \\"`python /home/ainur/.scripts/brightness_notification_bar.py`\\" -u LOW -r 1011"

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run -fn 'Source Code Pro Medium'

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#move workspaces between monitors
bindsym $mod+Control+i move workspace to output left
bindsym $mod+Control+o move workspace to output right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

bindsym $mod+Mod1+t exec xrandr --output eDP1 --mode 1920x1080 --pos 1920x0 --rotate normal --output DP1 --off --output HDMI1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output VIRTUAL1 --off
bindsym $mod+Mod1+y exec xrandr --output eDP1 --primary --mode 1920x1080 --pos 1920x0 --rotate normal --output DP1 --off --output HDMI1 --off --output VIRTUAL1 --off


bindsym Print exec --no-startup-id flameshot gui 
bindsym $mod+Print --release exec --no-startup-id flameshot gui 
bindsym $mod+Shift+Print --release exec --no-startup-id flameshot gui 
bindsym $mod+Shift+o exec --no-startup-id "firefox --new-tab `xclip -o`"

bindsym $mod+F1 exec thunar
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec blueman-manager
bindsym $mod+F4 exec pavucontrol

bindsym $mod+o workspace next
bindsym $mod+i workspace prev

bindsym $mod+Shift+p exec "killall picom ; picom -b"


## Autostart
exec --no-startup-id nm-applet
exec --no-startup-id dunst

exec --no-startup-id nitrogen --restore
#exec_always --no-startup-id setxkbmap -layout "us,ru" -option "grp:toggle,grp:ctrls_toggle"
exec_always --no-startup-id setxkbmap -model pc105 -layout "us,us,ru" -variant ,colemak_dhm, -option "grp:toggle,grp:ctrls_toggle"
exec --no-startup-id redshift -P -O 4000
exec --no-startup-id picom -b
# exec --no-startup-id xautolock -corners -00- -time 30 -locker blurlock
exec --no-startup-id xfce4-power-manager
exec --no-startup-id tmux new-session -s default

## Settings

font pango: Source Code Pro Medium 10

focus_follows_mouse no
workspace_auto_back_and_forth yes

default_border pixel 1
default_floating_border pixel 1
smart_borders on

gaps inner 10 
gaps outer 2 
hide_edge_borders none


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh

bindsym $mod+m bar mode toggle

bar {
    font pango:Source Code Pro Medium
    status_command i3blocks
	i3bar_command i3bar
	position top
    tray_output primary

	colors {
		background #212223
		statusline #FFFFFF
		separator  #454947
	}
}

#App appearance
for_window [title="^zoom$"] floating enable
